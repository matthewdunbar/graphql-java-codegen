buildscript {
    ext {
        artifactory_user = System.getenv('ARTIFACTORY_LW_USER')
        artifactory_password = System.getenv('ARTIFACTORY_LW_KEY')
    }
}

plugins {
    id "java"
    id "idea"
    id "ivy-publish"
    id "jacoco"
    id "java-library"
    id "signing"
    id "maven-publish"
    id "org.sonarqube" version "3.2.0"
}

def graphqlCodegenVersion = '5.4.1' // This variable used in the automatic release process

group = "com.lifeway.contentplatform"
version = graphqlCodegenVersion

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compileOnly "org.freemarker:freemarker:2.3.31"
    compileOnly "com.graphql-java:graphql-java:16.2"
    compileOnly "com.fasterxml.jackson.core:jackson-databind:2.13.3"
    compileOnly "com.typesafe:config:1.4.1"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.1"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.7.1"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.1"
    testImplementation "org.hamcrest:java-hamcrest:2.0.0.0"
}

test.useJUnitPlatform()

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("build/jacoco/*.exec")

    sourceSets sourceSets.main

    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
        html.enabled false
        csv.enabled false
    }
}

configurations {
    testCompile.extendsFrom compileOnly
}

test {
    testLogging {
        events "failed"

        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true

        showStandardStreams = false
    }
}

codeCoverageReport.dependsOn test

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'com.lifeway.contentplatform'
            artifactId = 'graphql-java-codegen'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
        }
    }
    repositories {
        maven {
            url 'https://artifactory.prod.lifeway.com/artifactory/contentplatform'
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
    }
}

if (project.hasProperty("signing.keyId")) {
    signing {
        sign publishing.publications.mavenJava
    }
}
